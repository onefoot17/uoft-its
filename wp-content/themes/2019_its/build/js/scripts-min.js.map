{"version":3,"sources":["../../src/js/scripts.js","../../src/js/_closest_polyfill.js"],"names":["html","document","querySelector","addEventListener","addtouchclass","event","classList","add","removeEventListener","carousels","querySelectorAll","Object","values","map","carousel","Glide","type","perView","mount","Element","prototype","matches","msMatchesSelector","webkitMatchesSelector","closest","s","el","this","parentElement","parentNode","nodeType","target","menu_toggle","menu_main","getAttribute","keyCode","preventDefault","setAttribute","remove"],"mappings":"yBAKA,IAAMA,EAAOC,SAASC,cAAe,QAIrCD,SAASE,iBAAkB,cAAc,SAASC,EAAeC,GAE7DL,EAAKM,UAAUC,IAAK,YAGpBN,SAASO,oBAAqB,aAAcJ,GAAe,MAC5D,GAGH,IAAMK,EAAYR,SAASS,iBAAkB,UAE7CC,OAAOC,OAAQH,GAAYI,KAAK,SAAAC,GACb,IAAIC,MAAOD,EAAU,CAChCE,KAAM,WACNC,QAAS,IAGNC,WCzBDC,QAAQC,UAAUC,UACpBF,QAAQC,UAAUC,QAAUF,QAAQC,UAAUE,mBAC9CH,QAAQC,UAAUG,uBAGhBJ,QAAQC,UAAUI,UACpBL,QAAQC,UAAUI,QAAU,SAAUC,GAClC,IAAIC,EAAKC,KAET,EAAG,CACC,GAAKD,EAAGL,QAASI,GAAM,OAAOC,EAE9BA,EAAKA,EAAGE,eAAiBF,EAAGG,iBAEf,OAAPH,GAA+B,IAAhBA,EAAGI,UAE5B,OAAO,ODgBnB7B,SAASE,iBAAkB,SAAS,SAAWE,GAC9C,GAAKA,EAAM0B,OAAOP,QAAW,gBAAqB,CAC3C,IAAMR,EAAOX,EAAMW,KACfgB,EAAc3B,EAAM0B,OAAOP,QAAW,gBACtCS,EAAYhC,SAASC,cAAe8B,EAAYE,aAAc,cAGlE,GAAc,YAATlB,GAA0C,KAAlBX,EAAM8B,SAAoC,KAAlB9B,EAAM8B,QACvD,OAAO,EAGX9B,EAAM+B,iBAE2C,SAA5CH,EAAUC,aAAc,gBAEzBD,EAAUI,aAAc,cAAe,SACvCL,EAAYK,aAAc,gBAAiB,QAE3CrC,EAAKM,UAAUC,IAAK,eAGpB0B,EAAUI,aAAc,cAAe,QACvCL,EAAYK,aAAc,gBAAiB,SAE3CrC,EAAKM,UAAUgC,OAAQ,kBAGhC","sourcesContent":["// Imports\n// Menu Toggle\nimport {closest_polyfill} from \"./_closest_polyfill.js\"\n\n// Variables\nconst html = document.querySelector( 'html' );\n\n// Non-touch device detection\n// first time user touches the screen\ndocument.addEventListener( 'touchstart', function addtouchclass( event ) {\n    // add \"is-touch\" class to document root using classList API\n    html.classList.add( 'is-touch' );\n\n    // de-register touchstart event\n    document.removeEventListener( 'touchstart', addtouchclass, false );\n}, false )\n\n// Glide slider carousel\nconst carousels = document.querySelectorAll( '.glide' );\n\nObject.values( carousels ).map( carousel => {\n    const slider = new Glide( carousel, {\n        type: 'carousel',\n        perView: 1\n    });\n    \n    slider.mount();\n});\n\n// Menu Toggle\nclosest_polyfill();\n\n\ndocument.addEventListener( 'click', function ( event ) {\n\tif ( event.target.closest( ( '.menu-toggle' ) ) ) {\n        const type = event.type,\n            menu_toggle = event.target.closest( ( '.menu-toggle' ) ),\n            menu_main = document.querySelector( menu_toggle.getAttribute( 'data-href' ) );\n\n        // Return if key pressed was not Space Bar or Enter\n        if ( type === 'keydown' && ( event.keyCode !== 13 && event.keyCode !== 32 ) ) {\n            return true;\n        }\n\n        event.preventDefault();\n\n        if ( menu_main.getAttribute( 'aria-hidden' ) === 'true' ) {\n            // Menu is closed\n            menu_main.setAttribute( 'aria-hidden', 'false' );\n            menu_toggle.setAttribute( 'aria-expanded', 'true' );\n            \n            html.classList.add( 'menu-open' );\n        } else {\n            // Menu is open\n            menu_main.setAttribute( 'aria-hidden', 'true' );\n            menu_toggle.setAttribute( 'aria-expanded', 'false' );\n            \n            html.classList.remove( 'menu-open' );\n        }\n    }\n}, false);\n","export function closest_polyfill() {\n    if ( !Element.prototype.matches ) {\n        Element.prototype.matches = Element.prototype.msMatchesSelector || \n        Element.prototype.webkitMatchesSelector;\n    }\n\n    if ( !Element.prototype.closest ) {\n        Element.prototype.closest = function( s ) {\n            var el = this;\n\n            do {\n                if ( el.matches( s ) ) return el;\n\n                el = el.parentElement || el.parentNode;\n\n            } while ( el !== null && el.nodeType === 1 );\n\n            return null;\n        };\n    }\n}\n"]}